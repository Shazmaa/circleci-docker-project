version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/python:3.8
  sonar-executor:
    docker:
      - image: sonarsource/sonar-scanner-cli
  dependency-executor:
    docker:
      - image: owasp/dependency-check
  docker-executor-with-privileges:
    docker:
      - image: circleci/golang
    resource_class: medium+

jobs:
  # Step 1: Build the project
  build:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Build Application
          command: python setup.py install

  # Step 2: Run SonarQube for code analysis
  sonar_scan:
    executor: sonar-executor
    steps:
      - checkout
      - run:
          name: Run SonarQube Analysis
          command: |
            sonar-scanner \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.organization=$SONAR_ORG \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_TOKEN

  # Step 3: Run OWASP Dependency-Check
  dependency_check:
    executor: dependency-executor
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Run OWASP Dependency Check
          command: |
            mkdir -p reports
            dependency-check --scan ./ --format HTML --out reports/dependency-report.html

  # Step 4: Run Unit Tests
  unit_test:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Install Test Dependencies
          command: pip install pytest
      - run:
          name: Run Unit Tests
          command: |
            mkdir -p test-reports
            pytest --junitxml=test-reports/test-report.xml

  # Step 5: Email Reports
  email_report:
    docker:
      - image: alpine
    steps:
      - checkout
      - run:
          name: Install Email Dependencies
          command: apk add --no-cache mailx ssmtp
      - run:
          name: Send Email with Reports
          command: |
            echo "SonarQube, Dependency-Check, and Unit Test reports attached." | \
            mail -s "DevSecOps Reports" -a reports/dependency-report.html -a test-reports/test-report.xml recipient@example.com

  # Step 6: Build and Push Docker Image
  docker_build_push:
    executor: docker-executor-with-privileges
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t $DOCKERHUB_USERNAME/your_project .
      - run:
          name: Push Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $DOCKERHUB_USERNAME/your_project

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - sonar_scan:
          requires:
            - build
      - dependency_check:
          requires:
            - build
      - unit_test:
          requires:
            - build
      - docker_build_push:
          requires:
            - sonar_scan
            - dependency_check
            - unit_test
      - email_report:
          requires:
            - sonar_scan
            - dependency_check
            - unit_test
