version: 2.1

executors:
  default-executor:
    docker:
      - image: circleci/node:latest

jobs:
  checkout_code:
    executor: default-executor
    steps:
      - checkout

  dependency_check:
    executor: default-executor
    steps:
      - checkout
      - run:
          name: Run OWASP Dependency Check
          command: |
            mkdir -p reports
            curl -LO https://github.com/jeremylong/DependencyCheck/releases/download/v7.0.4/dependency-check-7.0.4-release.zip
            unzip dependency-check-7.0.4-release.zip
            ./dependency-check/bin/dependency-check.sh --scan . --out reports --format HTML

  sonar_scan:
    executor: default-executor
    steps:
      - checkout
      - run:
          name: Run SonarQube Scan
          command: |
            export SONAR_HOST_URL="http://your-sonarqube-server"
            export SONAR_TOKEN="your-sonar-token"
            sonar-scanner -Dsonar.projectKey=YourProject -Dsonar.sources=.

  unit_tests:
    executor: default-executor
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: dotnet test --logger "trx;LogFileName=TestResults.trx"

  send_report:
    executor: default-executor
    steps:
      - checkout
      - run:
          name: Send Email Report
          command: |
            echo "Security and Test Report" > report.txt
            echo "SonarQube Results: http://your-sonarqube-server/dashboard?id=YourProject" >> report.txt
            echo "Dependency Check Report: $(pwd)/reports/index.html" >> report.txt
            echo "Unit Test Results: $(pwd)/TestResults.trx" >> report.txt
            cat report.txt | mail -s "Build Report" your-email@example.com

  build_and_push_docker:
    executor: default-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t your-dockerhub-username/your-app:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push your-dockerhub-username/your-app:latest

workflows:
  version: 2
  security_analysis_and_build:
    jobs:
      - checkout_code
      - dependency_check:
          requires:
            - checkout_code
      - sonar_scan:
          requires:
            - checkout_code
      - unit_tests:
          requires:
            - checkout_code
      - send_report:
          requires:
            - dependency_check
            - sonar_scan
            - unit_tests
      - build_and_push_docker:
          requires:
            - send_report
