version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build the project
          command: npm run build

  sonar_scan:
    docker:
      - image: sonarsource/sonar-scanner-cli
    steps:
      - checkout
      - run:
          name: Run SonarQube Analysis
          command: sonar-scanner -Dsonar.projectKey=your_project_key -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONARQUBE_TOKEN

  dependency_check:
    docker:
      - image: owasp/dependency-check
    steps:
      - checkout
      - run:
          name: Run OWASP Dependency-Check
          command: dependency-check --scan ./ --format HTML --out dependency-report.html

  unit_test:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run Unit Tests
          command: pytest --junitxml=test-report.xml

  email_report:
    docker:
      - image: alpine
    steps:
      - run:
          name: Install Mail Utilities
          command: apk add --no-cache mailx
      - run:
          name: Send Email Report
          command: |
            echo "SonarQube, Dependency-Check, and Unit Test reports attached." | mail -s "DevSecOps Reports" -a dependency-report.html -a test-report.xml recipient@example.com

  docker_build_push:
    docker:
      - image: circleci/golang
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t your_dockerhub_username/your_project .
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push Docker Image
          command: docker push your_dockerhub_username/your_project

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - sonar_scan:
          requires:
            - build
      - dependency_check:
          requires:
            - build
      - unit_test:
          requires:
            - build
      - docker_build_push:
          requires:
            - sonar_scan
            - dependency_check
            - unit_test
      - email_report:
          requires:
            - sonar_scan
            - dependency_check
            - unit_test
