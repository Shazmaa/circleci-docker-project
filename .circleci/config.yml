version: 2.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.11
    environment:
      ODC_VERSION: 8.4.0

  sonar-executor:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    environment:
      SONAR_SCANNER_OPTS: -Xmx2048m

jobs:
  checkout-code:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install basic dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y unzip

  sonar-analysis:
    executor: sonar-executor
    steps:
      - checkout
      - run:
          name: Run SonarQube Scan
          command: |
            sonar-scanner \
              -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
              -Dsonar.sources=. \
              -Dsonar.exclusions=**/venv/**,**/node_modules/**,**/.scannerwork/** \
              -Dsonar.host.url=${SONAR_HOST_URL} \
              -Dsonar.token=${SONAR_TOKEN} \
              -Dsonar.python.version=3.11 \
              -Dsonar.python.coverage.reportPaths=coverage.xml

  dependency-check:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Download OWASP Dependency Check
          command: |
            wget https://github.com/jeremylong/DependencyCheck/releases/download/v${ODC_VERSION}/dependency-check-${ODC_VERSION}-release.zip
            unzip dependency-check-${ODC_VERSION}-release.zip -d /opt
            chmod +x /opt/dependency-check/bin/dependency-check.sh
      - run:
          name: Run Dependency Check
          command: |
            mkdir -p odc-reports
            /opt/dependency-check/bin/dependency-check.sh \
              --project "${CIRCLE_PROJECT_REPONAME}" \
              --scan . \
              --out odc-reports \
              --format "HTML" \
              --enableExperimental \
              --failOnCVSS 7 \
              --noupdate

  unit-tests:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt pytest pytest-cov
      - run:
          name: Run Unit Tests with Coverage
          command: |
            pytest --cov=./ --cov-report=xml:coverage.xml > test-results.txt
      - store_artifacts:
          path: coverage.xml
      - store_artifacts:
          path: test-results.txt

  docker-build-push:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t ${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1:0:7} .
      - run:
          name: Push Docker image to Docker Hub
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker push ${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1:0:7}

  send-notification:
    executor: python-executor
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Send Slack Notification
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Pipeline completed for ${CIRCLE_PROJECT_REPONAME}\n- SonarQube Report: ${SONAR_HOST_URL}/dashboard?id=${SONAR_PROJECT_KEY}\n- Docker Image: ${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1:0:7}"}' \
            ${SLACK_WEBHOOK_URL}

workflows:
  devsecops-pipeline:
    jobs:
      - checkout-code
      - unit-tests:
          requires:
            - checkout-code
      - dependency-check:
          requires:
            - checkout-code
      - sonar-analysis:
          requires:
            - checkout-code
            - unit-tests
      - docker-build-push:
          requires:
            - unit-tests
            - dependency-check
            - sonar-analysis
      - send-notification:
          requires:
            - docker-build-push
